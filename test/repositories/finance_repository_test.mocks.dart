// Mocks generated by Mockito 5.4.0 from annotations
// in bitstack/test/repositories/finance_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:bitstack/models/balance.dart' as _i4;
import 'package:bitstack/models/price.dart' as _i3;
import 'package:bitstack/services/api_service.dart' as _i5;
import 'package:bitstack/services/db_service.dart' as _i7;
import 'package:http/http.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeClient_0 extends _i1.SmartFake implements _i2.Client {
  _FakeClient_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePrice_1 extends _i1.SmartFake implements _i3.Price {
  _FakePrice_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBalance_2 extends _i1.SmartFake implements _i4.Balance {
  _FakeBalance_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ApiService].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiService extends _i1.Mock implements _i5.ApiService {
  MockApiService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Client get client => (super.noSuchMethod(
        Invocation.getter(#client),
        returnValue: _FakeClient_0(
          this,
          Invocation.getter(#client),
        ),
      ) as _i2.Client);
  @override
  Map<String, String> get headers => (super.noSuchMethod(
        Invocation.getter(#headers),
        returnValue: <String, String>{},
      ) as Map<String, String>);
  @override
  _i6.Future<_i3.Price> getPrice() => (super.noSuchMethod(
        Invocation.method(
          #getPrice,
          [],
        ),
        returnValue: _i6.Future<_i3.Price>.value(_FakePrice_1(
          this,
          Invocation.method(
            #getPrice,
            [],
          ),
        )),
      ) as _i6.Future<_i3.Price>);
  @override
  _i6.Future<_i4.Balance> getBalance() => (super.noSuchMethod(
        Invocation.method(
          #getBalance,
          [],
        ),
        returnValue: _i6.Future<_i4.Balance>.value(_FakeBalance_2(
          this,
          Invocation.method(
            #getBalance,
            [],
          ),
        )),
      ) as _i6.Future<_i4.Balance>);
}

/// A class which mocks [DBService].
///
/// See the documentation for Mockito's code generation for more information.
class MockDBService extends _i1.Mock implements _i7.DBService {
  MockDBService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  dynamic save(
    Map<dynamic, dynamic>? map,
    _i7.DBKey? key,
  ) =>
      super.noSuchMethod(Invocation.method(
        #save,
        [
          map,
          key,
        ],
      ));
  @override
  _i6.Future<Map<String, dynamic>> getValue(_i7.DBKey? key) =>
      (super.noSuchMethod(
        Invocation.method(
          #getValue,
          [key],
        ),
        returnValue:
            _i6.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i6.Future<Map<String, dynamic>>);
}
